AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for FinTrax PostgreSQL RDS Database'

Parameters:
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: Environment name
  
  DBInstanceClass:
    Type: String
    Default: 'db.t3.micro'
    AllowedValues: 
      - 'db.t3.micro'
      - 'db.t3.small'
      - 'db.t3.medium'
      - 'db.t3.large'
    Description: RDS instance type
  
  DBName:
    Type: String
    Default: 'fintr'
    Description: Database name
  
  DBUsername:
    Type: String
    Default: 'postgres'
    Description: Database master username
  
  DBPassword:
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 41
    Description: Database master password (8-41 characters)
  
  AllocatedStorage:
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 65536
    Description: Database storage size in GB
  
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the database will be deployed
  
  PrivateSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of private subnet IDs for the database (minimum 2 subnets in different AZs)
  
  AllowedCIDR:
    Type: String
    Default: '10.0.0.0/16'
    Description: CIDR block allowed to access the database

Resources:
  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub 'Subnet group for ${Environment} FinTrax database'
      SubnetIds: !Ref PrivateSubnetIds
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-fintrax-db-subnet-group'
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: 'FinTrax'

  # Security Group for RDS
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'Security group for ${Environment} FinTrax database'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Ref AllowedCIDR
          Description: 'PostgreSQL access from VPC'
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: '0.0.0.0/0'
          Description: 'All outbound traffic'
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-fintrax-db-sg'
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: 'FinTrax'

  # DB Parameter Group
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Sub 'Parameter group for ${Environment} FinTrax PostgreSQL database'
      Family: 'postgres15'
      Parameters:
        shared_preload_libraries: 'pg_stat_statements'
        log_statement: 'all'
        log_min_duration_statement: 1000
        log_checkpoints: 1
        log_connections: 1
        log_disconnections: 1
        log_lock_waits: 1
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-fintrax-db-params'
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: 'FinTrax'

  # RDS Instance
  Database:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub '${Environment}-fintrax-database'
      DBName: !Ref DBName
      Engine: postgres
      EngineVersion: '15.4'
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref AllocatedStorage
      StorageType: gp2
      StorageEncrypted: true
      
      # Master credentials
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      
      # Network configuration
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      PubliclyAccessible: false
      
      # Parameter and option groups
      DBParameterGroupName: !Ref DBParameterGroup
      
      # Backup configuration
      BackupRetentionPeriod: 7
      PreferredBackupWindow: '03:00-04:00'
      PreferredMaintenanceWindow: 'sun:04:00-sun:05:00'
      
      # Monitoring
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt EnhancedMonitoringRole.Arn
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      
      # Other settings
      AutoMinorVersionUpgrade: true
      MultiAZ: !If [IsProd, true, false]
      DeletionProtection: !If [IsProd, true, false]
      
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-fintrax-database'
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: 'FinTrax'

  # Enhanced Monitoring Role
  EnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole'
      Path: /

  # Secrets Manager Secret for database credentials
  DatabaseSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '/${Environment}/fintrax/database'
      Description: !Sub 'Database credentials for ${Environment} FinTrax application'
      SecretString: !Sub |
        {
          "username": "${DBUsername}",
          "password": "${DBPassword}",
          "engine": "postgres",
          "host": "${Database.Endpoint.Address}",
          "port": ${Database.Endpoint.Port},
          "dbname": "${DBName}",
          "dbInstanceIdentifier": "${Database}"
        }
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-fintrax-db-secret'
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: 'FinTrax'

  # CloudWatch Log Group for database logs
  DatabaseLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/rds/instance/${Environment}-fintrax-database/postgresql'
      RetentionInDays: 14

Conditions:
  IsProd: !Equals [!Ref Environment, 'prod']

Outputs:
  DatabaseEndpoint:
    Description: 'RDS instance endpoint'
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: !Sub '${Environment}-fintrax-db-endpoint'

  DatabasePort:
    Description: 'RDS instance port'
    Value: !GetAtt Database.Endpoint.Port
    Export:
      Name: !Sub '${Environment}-fintrax-db-port'

  DatabaseName:
    Description: 'Database name'
    Value: !Ref DBName
    Export:
      Name: !Sub '${Environment}-fintrax-db-name'

  DatabaseConnectionString:
    Description: 'Database connection string for applications'
    Value: !Sub 'postgresql://${DBUsername}:${DBPassword}@${Database.Endpoint.Address}:${Database.Endpoint.Port}/${DBName}'
    Export:
      Name: !Sub '${Environment}-fintrax-db-connection-string'

  DatabaseSecretArn:
    Description: 'ARN of the Secrets Manager secret containing database credentials'
    Value: !Ref DatabaseSecret
    Export:
      Name: !Sub '${Environment}-fintrax-db-secret-arn'

  SecurityGroupId:
    Description: 'Security Group ID for the database'
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub '${Environment}-fintrax-db-sg-id'
